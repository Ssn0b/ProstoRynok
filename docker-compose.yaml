version: '3.8'
services:
  postgres-order:
    container_name: order-service
    image: postgres:latest

    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    restart: always

  postgres-customer:
    container_name: customer-service
    image: postgres:latest
    environment:
      POSTGRES_DB: customer-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  postgres-producer:
    container_name: producer-service
    image: postgres:latest
    environment:
      POSTGRES_DB: producer-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: product-service
    volumes:
      - mongodb_data:/data/db

  ## Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  mongodb_data:
    driver: local



